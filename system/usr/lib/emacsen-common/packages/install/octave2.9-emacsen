#!/bin/sh
#
# emacsen install script for the Debian GNU/Linux octave package
#
# Written by Dirk Eddelbuettel <edd@debian.org>   

#set -e

# Canadian spelling ;-)
flavour=$1

package=octave2.9-emacsen
files="octave-hlp.el octave-inf.el octave-mod.el"
source=/usr/share/emacs/site-lisp/${package}
destination=/usr/share/${flavour}/site-lisp/${package}
flavourtest=`echo $flavour | cut -c-6`
if test ${flavourtest} = xemacs ; then
  siteflag="-vanilla"
else
  siteflag="--no-site-file"
fi
flags="${siteflag} -q  -no-init-file -batch -l path.el -f batch-byte-compile"


if test ${flavour} != emacs 
then
    echo install/${package}: Byte-compiling for emacsen flavour ${flavour}

    # Copy the temp .el files into the destination directory
    install -c -m 0755 -d ${destination}
    for i in $files
    do 
	cp $source/$i $destination
    done

    # The eval-and-compile construct is needed by emacs19, and was
    # pulled out of another package by Yann Dirson. Merci bien, Yann!
    # The load-path.el trick is from Davide Salvetti's auctex package
    cd ${destination}
    cat <<EOF >path.el
(eval-and-compile
  (condition-case () (require 'custom) (error nil))
  (if (and (featurep 'custom) (fboundp 'custom-declare-variable))
      nil 
    (defmacro defgroup (&rest args) nil)
    (defmacro defcustom (var value doc &rest args) 
      (\` (defvar (, var) (, value) (, doc))))))
(setq load-path (cons "." load-path)
      byte-compile-warnings nil)
EOF
    logfile=`tempfile`
    ${flavour} ${flags} ${files} >> ${logfile} 2>&1
    rm ${files} path.el
    mv ${logfile} ${destination}/install.log
    echo "Compilation log saved to ${destination}/install.log"

else
    echo install/${package}: Ignoring emacsen flavour ${flavour}
fi

exit 0;

