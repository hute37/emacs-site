[user]
        name = GC.Pelosi
        email = giovanni.pelosi@unimib.it
[user.h37]
        name = hute37
        email = hute37@gmail.com
[user.ub]
        name = GC.Pelosi
        email = giovanni.pelosi@unimib.it
[core]
	autocrlf = false
	longpaths = true
[color]
	ui = auto
[gui]
	fontdiff = -family cantarell -size 8 -weight normal -slant roman -underline 0 -overstrike 0
[push]
	default = simple
[pull]
	rebase = false
[merge]
	tool = meld3_noauto
	conflictstyle = diff3
[mergetool "meld3_auto"]
	cmd = meld --diff $LOCAL $MERGED $REMOTE --diff $BASE $LOCAL --diff $BASE $REMOTE  --auto-merge
[mergetool "meld3_noauto"]
	cmd = meld --diff $LOCAL $MERGED $REMOTE --diff $BASE $LOCAL --diff $BASE $REMOTE
[credential]
	helper = store
[github]
	user = hute37
	token = 7bbaab4c6c3dabf44517721636742ab7
[alias]
	cp = cherry-pick
	st = status -s
	cl = clone
	ci = commit
	co = checkout
	br = branch 
	wdiff = diff --word-diff
	dc = diff --cached
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	sl = stash list
	sa = stash apply
	ss = stash save
	last = log -1 HEAD
    gss = "!f() { git status -s -uall;  git status; }; f"
    gsr = "!f() { git status -s -uall;  git fetch --all; git --no-pager branch -av; git status; }; f"
    pullf = "!f() { git status -s -uall; [ -z \"$(git status --porcelain)\" ] && git pull; git status; }; f"
	tree = log --graph --decorate --pretty=oneline --abbrev-commit
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ls1 = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr %an)%Creset' --abbrev-commit --date=relative
	ls2 = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr %an)%Creset' --abbrev-commit --date=relative
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	le = log --oneline --decorate
	filelog = log -u
	fl = log -u
	dl = "!git ll -1"
	dlc = diff --cached HEAD^
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	find = "!git ls-files | grep -i"
	gr = grep -Ii
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	la = "!git config -l | grep alias | cut -c 7-"
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"
	skip = merge --strategy ours
	over = merge --strategy theirs
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
[mergetool]
	keepBackup = false
[status]
	showUntrackedFiles = all
